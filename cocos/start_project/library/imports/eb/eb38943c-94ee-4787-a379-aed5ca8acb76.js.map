{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","squashDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","squash","scaleTo","stretch","scaleBack","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","log","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","start","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 辅助形变动作时间\n        squashDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        // 跳跃音效资源\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n    setJumpAction() {\n        // var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // // 下落\n        // var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        // var callback = cc.callFunc(this.playJumpSound, this);\n        // // 不断重复，而且每次完成落地动作后调用回调来播放声音\n        // return cc.repeatForever(cc.sequence( jumpUp, jumpDown, callback));\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 形变\n        var squash = cc.scaleTo(this.squashDuration, 1, 0.6);\n        var stretch = cc.scaleTo(this.squashDuration, 1, 1.2);\n        var scaleBack = cc.scaleTo(this.squashDuration, 1, 1);\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\n        return cc.repeatForever(cc.sequence(squash, stretch, jumpUp, scaleBack, jumpDown, callback));\n    },\n    playJumpSound() {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n    // LIFE-CYCLE CALLBACKS:\n    onKeyDown(event) {\n        cc.log(event)\n        // set a flag when key pressed\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n    onKeyUp(event) {\n        // unset a flag when key released\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n    onLoad() {\n        this.jumpAction = this.setJumpAction()\n        this.node.runAction(this.jumpAction)\n\n        // 加速度方向开关\n        this.accLeft = false\n        this.accRight = false\n        // 主角当前水平方向速度\n        this.xSpeed = 0\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n    onDestroy() {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n    start() {\n\n    },\n\n    update(dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}